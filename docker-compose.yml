# Media stack - Kris 22
# 
# Create networks before running docker-compose -p media up -d
# docker network create inside_network

# .env file variables:
# $PUID
# $PGID
# $TZ i.e. "Europe/London" 
# $DOCKERDIR location of docker and configuration files

# Transmission
#
# LOCAL_NETWORK  CIDR format: i.e. 192.168.1.0/24
# TRANSMISSION_USERNAME anything you like
# TRANSMISSION_PASSWORD anything you like
# MEDIADIR base location for media files, expects subfolders:
# - app_data
# - app_data/downloads
# - app_data/downloads/complete
# - app_data/downloads/incomplete
# - movies
# - tv

# VPN: for config options: https://haugene.github.io/docker-transmission-openvpn/
# VPN_PROVIDER 
# VPN_CONFIG
# VPN_USERNAME
# VPN_PASSWORD

# Stack applications
# [9000] Transmission web UI
# [8888] Tinyproxy
# [9001] Jackett
# [9002] Radarr
# [9003] Sonarr
# [9004] Tautulli

version: "3.7"

networks:
  inside_network:
    external:
      name: inside_network

services:
  # Portainer: Portainer agent for remote management
  #
  portainer_agent:
    image: portainer/agent
    container_name: portainer-agent
    restart: always
    ports:
      - "10000:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes

  # Transmission: Download client with VPN over IP Vanish
  #
  transmission:
    image: haugene/transmission-openvpn
    container_name: transmission-openvpn
    restart: unless-stopped
    ports:
      - "9000:9091"
      - "8888:8888"
    cap_add:
      - NET_ADMIN
    dns:
      - 1.1.1.1 # Change DNS if needed
      - 1.0.0.1
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - OPENVPN_PROVIDER=${VPN_PROVIDER}
      - OPENVPN_CONFIG=${VPN_CONFIG}
      - OPENVPN_USERNAME=${VPN_USERNAME}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      - CREATE_TUN_DEVICE=true
      - LOCAL_NETWORK=${LOCAL_NETWORK}
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
      - TRANSMISSION_RPC_HOST_WHITELIST="127.0.0.1,192.168.*.*" # Add additional networks as required
      - TRANSMISSION_RPC_USERNAME=${TRANSMISSION_USERNAME}
      - TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_PASSWORD}
      - TRANSMISSION_UMASK=0
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_RATIO_LIMIT=0
      - TRANSMISSION_DOWNLOAD_DIR=/downloads
      - TRANSMISSION_INCOMPLETE_DIR=/incomplete
      - WEBPROXY_ENABLED=true # Used to route Jackett traffic
      - WEBPROXY_PORT=8888
    volumes:
      - ${DOCKERDIR}/app_data/transmission:/data
      - ${MEDIADIR}/app_data/downloads/completed:/downloads
      - ${MEDIADIR}/app_data/downloads/incomplete:/incomplete
    networks:
      - inside_network
  
  # Jackett: proxy for Radarr and Sonarr
  #
  jackett:
    image: "linuxserver/jackett"
    container_name: jackett
    restart: unless-stopped
    ports:
      - "9001:9117"
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDIR}/app_data/jackett:/config
      - ${DOCKERDIR}/app_data/jackett:/data
    networks:
      - inside_network
  # Radarr: movie downloader
  # 
  radarr:
    image: "linuxserver/radarr"
    container_name: radarr
    restart: unless-stopped
    ports:
      - "9002:7878"
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=0
    volumes:
      - ${DOCKERDIR}/app_data/radarr:/config
      - ${MEDIADIR}/app_data/downloads/completed:/downloads
      - ${MEDIADIR}/movies:/movies
    networks:
      - inside_network
  # Radarr: TV downloader
  # 
  sonarr:
    image: "linuxserver/sonarr"
    container_name: sonarr
    restart: unless-stopped
    ports:
      - "9003:8989"
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=0
    volumes:
      - ${DOCKERDIR}/app_data/sonarr:/config
      - ${MEDIADIR}/app_data/downloads/completed:/downloads
      - ${MEDIADIR}/tv:/tv
    networks:
      - inside_network
  # Tautulli: PLEX server monitoring
  #
  tautulli:
    image: ghcr.io/linuxserver/tautulli
    container_name: tautulli
    restart: unless-stopped
    ports:
      - "9004:8181"
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKERDIR}/app_data/tautulli:/config"
    networks:
      - inside_network
