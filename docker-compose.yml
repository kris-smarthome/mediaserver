
# .env file variables:
# $PUID
# $PGID
# $TZ i.e. "Europe/London"
# $VPN_PROVIDER
# $VPN_USERNAME
# $VPN_PASSWORD
# $VPN_COUNTRY

# MEDIADIR base location for media files, expects subfolders:
# - app_data/downloads
# - movies
# - tv 

# VPN_PROVIDER
# VPN_USERNAME
# VPN_PASSWORD
# VPN_COUNTRY

# Stack applications
# [3420]  PLEX
# [8888]  Gluetun HTTP proxy
# [9000]  Transmission-Flood
# [9001]  Prowlarr
# [9002]  Radarr
# [9003]  Sonarr
# [9004]  Tdarr
# [8266]  Tdarr server port
# [8267]  Tdarr internal node port
# [9005]  Tautulli
# [8191]  Flaresolverr
# [    ]  Recyclarr 
#
# [10000] Portainer agent
# [     ] Ouroboros 

version: "3.0"

services:
  # Portainer: Portainer agent for remote management
  #
  portainer_agent:
    image: portainer/agent
    container_name: portainer-agent
    restart: always
    ports:
      - 10000:9001
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
  # Ouroboros: container management
  #
  ouroboros:
    image: pyouroboros/ouroboros
    container_name: ouroboros
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      - CLEANUP=true
      - INTERVAL=86400
      - LOG_LEVEL=info
      - SELF_UPDATE=true
      - TZ=${TZ}
      - IGNORE="portainer-agent"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - media_network
  # NVIDIA toolkit: Transcoding using NVIDIA hardware.
  #
  # Configure the host with the Nvidia toolkit for NVIDIA transcoding
  # https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker

  # PLEX: media server: for RAM transcoding set the transcode path to /transcode
  #
  plex:
    image: lscr.io/linuxserver/plex
    container_name: plex
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      # - PLEX_CLAIM=${PLEXCLAIM} # optional argument
      # uncomment the belw if usoing NVIDIA GPU's for trandcoding.
      # - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - plex:/config
      - ${MEDIADIR}:/media
      - /dev/shm:/transcode
  # GlueTUN VPN proxy server
  #
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    restart: always
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp
      # Transmission
      - 9000:9091
      - 51413:51413
      - 51413:51413/udp
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VPN_SERVICE_PROVIDER=${VPN_PROVIDER}
      - OPENVPN_USER=${VPN_USERNAME}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - SERVER_COUNTRIES=${VPN_COUNTRY}
      - HTTPPROXY=on
  # Transmission: Torrent Client
  #
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - TRANSMISSION_WEB_HOME=/flood-for-transmission/
    volumes:
      - transmission:/config
      - ${MEDIADIR}/app_data/downloads:/downloads
      - ${MEDIADIR}/app_data/watch:/watch
    network_mode: service:gluetun
  # Prowwlarr: Torrtent proxy
  # 
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    ports:
      - 9001:9696
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - prowlarr:/config
    networks:
      - media_network
  # Radarr: movie downloader
  # 
  radarr:
    image: "linuxserver/radarr"
    container_name: radarr
    restart: unless-stopped
    ports:
      - 9002:7878
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002
    volumes:
      - radarr:/config
      - ${MEDIADIR}/app_data/downloads/complete:/downloads/complete
      - ${MEDIADIR}/movies:/movies
    networks:
      - media_network
  # Sonarr: TV downloader
  # 
  sonarr:
    image: "linuxserver/sonarr"
    container_name: sonarr
    restart: unless-stopped
    ports:
      - 9003:8989
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002
    volumes:
      - sonarr:/config
      - ${MEDIADIR}/app_data/downloads/complete:/downloads/complete
      - ${MEDIADIR}/tv:/tv
      - /etc/localtime:/etc/localtime:ro
    networks:
      - media_network
  # Tdarr: Media transcoder
  #
  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    container_name: tdarr
    restart: unless-stopped
    network_mode: bridge
    ports:
      - 9004:8265 # webUI port
      - 8266:8266 # server port
      - 8267:8267 # Internal node port
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002
      # Remember to set the below variables before running compose
      #      
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - nodeID=InternalNode
      - nodeIP=0.0.0.0
      - nodePort=8267 
    volumes:
    - tdarr_server:/app/server
    - tdarr_config:/app/configs
    - tdarr_logs:/app/logs
    - ${MEDIADIR}:/media
    - /dev/shm:/temp
    networks:
      - media_network
  # Tautulli: PLEX server monitoring
  #
  tautulli:
    image: ghcr.io/linuxserver/tautulli
    container_name: tautulli
    restart: unless-stopped
    ports:
      - 9005:8181
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - tautulli:/config
    networks:
      - media_network
  # Flaresolverr: Cloudflare proxy for Prowlarr
  #
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    ports:
      - "8191:8191"
    security_opt:
      - no-new-privileges:true
    environment:
      - LOG_LEVEL=info
    networks:
      - media_network
  # Recyclarr: Trash guide sync: https://recyclarr.dev/wiki/getting-started
  #
  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    init: true
    environment: 
      - TZ=${TZ}
    user: ${PUID}:${PGID}
    volumes:
      - recyclarr:/config
    networks:
      - media_network

networks:
  media_network:
    driver: bridge

volumes:
  plex:
  transmission:
  prowlarr:
  radarr:
  sonarr:
  tdarr_server:
  tdarr_config:
  tdarr_logs:
  tautulli:
  recyclarr: